stages:
  - test
  - package
  - deploy

test:debian:
  stage: test
  script:
    - apt-get update -qy
    - apt-get install -y curl gnupg apt-transport-https python3-dev python3-pip
    - pip3 install -r requirements.txt
    - python3 setup.py test
  tags:
    - debian


test:archlinux:
  stage: test
  script:
    - pacman -Sy python-pip gcc git --noconfirm
    - pip install -r requirements.txt
    - python setup.py test
  tags:
    - archlinux


package:debian:
  stage: package
  script:
    - apt-get update -qy
    - apt-get install -y curl gnupg apt-transport-https

    - apt-get install -y sudo python3-flask-celery-helper python3-dev dh-python python3-pip python3-stdeb python3-celery python3-markupsafe python3-eventlet python3-psycopg2 python3-dateutil python3-lxml python3-docopt python3-netifaces python3-yaml python3-raven python3-flask-migrate python3-flask-babel python3-socketio python3-flask-socketio python3-kombu rabbitmq-server
    - rm -rf "./deb_dist"
    - python3 setup.py --command-packages=stdeb.command bdist_deb
  tags:
    - debian

  artifacts:
    paths:
      - deb_dist/*.deb
    expire_in: 1d


package:archlinux:
  stage: package
  script:
    - pacman -Sy git sudo postgresql python-pam python-dnspython python-psycopg2 python-flask-babel python-flask-celery-helper fakeroot binutils python python-flask python-babel python-celery python-yaml python-flask-socketio python-socketio python-flask-migrate python-raven python-docopt python-eventlet python-netifaces python-lxml openvpn autofs python-psutil rabbitmq hostapd wpa_supplicant --noconfirm
    - useradd -m -G users -s /bin/bash package
    - cd archlinux
    - sudo -H -u package makepkg -f
  tags:
    - archlinux

  artifacts:
    paths:
      - archlinux/tux-control*.pkg.tar.zst
    expire_in: 1d


deploy:all:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh www-data@repository 'rm -rf /var/www/repository.salamek.cz/www/arch/pub/any/tux-control*.pkg.tar.zst'
    - ssh www-data@repository 'rm -rf /var/www/repository.salamek.cz/cache/deb/pub/all/tux-control*.deb'
    - scp archlinux/tux-control*.pkg.tar.zst www-data@repository:/var/www/repository.salamek.cz/www/arch/pub/any
    - scp deb_dist/*.deb www-data@repository:/var/www/repository.salamek.cz/cache/deb/pub/all
    - ssh www-data@repository '/var/www/repository.salamek.cz/deb-pub-update.sh'
    - ssh www-data@repository '/var/www/repository.salamek.cz/arch-pub-update.sh'
  dependencies:
    - package:debian
    - package:archlinux
  tags:
    - docker
  only:
    - tags